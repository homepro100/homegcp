import subprocess
import sys
#import wget
import os.path
import requests

def duckdns_update(domains, token, ip, verbose=False):
    """Update duckdns.org Dynamic DNS record.
    Args:
        domains (str): The DuckDNS domains to update as comma separated list.
        token (str): An UUID4 provided by DuckDNS for your user.
        verbose (bool): Returns info about whether or not IP has been changed as
            well as if the request was accepted.
    Returns:
        "OK" or "KO" depending on success or failure. Verbose adds IP and change
        status as well.
    """
    params = {
        "domains": domains,
        "token": token,
        "ip": ip,
        "verbose": verbose
    }
    r = requests.get("https://www.duckdns.org/update", params)
    return r.text.strip().replace('\n', ' ')
token = "36afec83-004c-477b-9b12-850e187554cd"
domain = "h0megcp.duckdns.org"

def download_key():
    #url_pub = "https://raw.githubusercontent.com/homepro100/homegcp/main/google_compute_engine.pub"
    #url_prv = "https://raw.githubusercontent.com/brianhairstonko/KEYTEST/main/google_compute_engine"
    pub = '/.ssh/google_compute_engine.pub'
    prv = '/.ssh/google_compute_engine'
    loc = '/.ssh'

    #if os.path.exists(pub):
    #    os.remove(pub)bd268
    #if os.path.exists(prv):
    #    os.remove(prv)
    try:
         # executing useradd command using subprocess module
         subprocess.run(['sudo', 'rm', '-rf', '/.ssh/google_compute_engine.pub' ])  
         subprocess.run(['sudo', 'rm', '-rf', '/.ssh/google_compute_engine' ])     
    except:
         print(f"Failed to add user.")                    
         sys.exit(1)

    try:
        down = subprocess.run(['sudo', 'wget', 'https://raw.githubusercontent.com/homepro100/homegcp/main/google_compute_engine.pub']) 
        down2 = subprocess.run(['sudo', 'wget', 'https://raw.githubusercontent.com/brianhairstonko/KEYTEST/main/google_compute_engine' ]) 
    except:
        pass
    subprocess.run(['sudo', 'mv', 'google_compute_engine.pub', '.ssh/' ])
    subprocess.run(['sudo', 'mv', 'google_compute_engine', '.ssh/' ])
# add user function
def add_user():

     # Ask for the input
     username = "h0megcp"

     # Asking for users password
     password = "12345"

     try:
         # executing useradd command using subprocess module
         subprocess.run(['sudo', 'useradd', '-p', password, username ])     
     except:
         print(f"Failed to add user.")                    
         sys.exit(1)



def run_first():

     try:
         # executing useradd command using subprocess module
         r = subprocess.run(['gcloud', 'alpha', 'cloud-shell', 'ssh', '--dry-run' ],stdout=subprocess.PIPE)   
         a = r.stdout
         return a
         #print('gcp Done')
     except:
         print(f"Failed to create session.")                    
         sys.exit(1)


def run_wget():

     try:
         # executing useradd command using subprocess module
         subprocess.run(['pip3', 'install', 'wget'])
         print('Installing Wget Moldule Done')

     except:
         print(f"Wget Already Installed.")                    
         sys.exit(1)

try:
    add_user()
except:
    pass


run_wget()


run_first()


download_key()

res = run_first()
re = res.decode()
words, ss = re.split('=no ')


try:
    ips, ssss = ss.split(' -- DEVSHELL_PROJECT_ID')
    user,ip = ips.split('@')

    print ("""
           -----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn
NhAAAAAwEAAQAAAQEAtJASszWz6d9b08qSzqb7M+aPTF5S3MQlvlRyFRNOxxIAiMQ2YLFj
p+SbBbOBMVF9H5IJtwJb1POvq/M/vX5AU41cZleId5JbT8fVORa1+gYI1sps9zm9lUhUbO
yHGR3AtV5vrHJ/tXLijnn0BLmOIFZ9xcMfV/mFTtbWLbDgjLMJgShnKVuSPoJGC9sqDbhy
9Y45oQzwnTJB9BJO2S1SkG4qUBlpf7z2XY45qhigGsjGAM9lcMQqjiXFYHnuts0mM0n0rR
32E/fTgvQ8VPCUq5C1Ez2Gg3ihSaGyhbnCdaGn/UBpAj9ULguL0/LyxIL05VkY/Zjy/Lr2
YMD4arevpQAAA8AvsFVRL7BVUQAAAAdzc2gtcnNhAAABAQC0kBKzNbPp31vTypLOpvsz5o
9MXlLcxCW+VHIVE07HEgCIxDZgsWOn5JsFs4ExUX0fkgm3AlvU86+r8z+9fkBTjVxmV4h3
kltPx9U5FrX6BgjWymz3Ob2VSFRs7IcZHcC1Xm+scn+1cuKOefQEuY4gVn3Fwx9X+YVO1t
YtsOCMswmBKGcpW5I+gkYL2yoNuHL1jjmhDPCdMkH0Ek7ZLVKQbipQGWl/vPZdjjmqGKAa
yMYAz2VwxCqOJcVgee62zSYzSfStHfYT99OC9DxU8JSrkLUTPYaDeKFJobKFucJ1oaf9QG
kCP1QuC4vT8vLEgvTlWRj9mPL8uvZgwPhqt6+lAAAAAwEAAQAAAQBbc3EVNUjnVgpjTYFn
iylF0yuW6Vscl3fqW0jgpcPLjbGZk49bD91ChsWBcLYpbXVrDQNAnsA2Lio2c+A/sHcSGl
HHP+RNc2IuGS9EV91ZQb8uUp435RXBSz3/YRjXvrsA4VC8Tc2i8AoRUXEnB3gVptjS1g3E
+ArtsGAQCjrg515YmYoKcw0TFgrwy1qMYeofgTRFnmFAIKAyIfv6TGM/st3K1lpPT9L1JW
54BnPsJ0NMRXYechAgEpiS3wfTK1CfXf3iS+GRbAzF2oA0c3DTNLWZhQ9ESXOoMdImppN1
FfBo9WNH2x/cFBSg6zSMaVS4HCrwu+o0BiVLzA79+BfBAAAAgAQLQHmXWYb0rfuTnngULu
i2GWEFNtugt3Ad1Tn7IgrIgDLjuQLZPW9lGd0r4e7tJGDwsNk7mSa2JFYscvlg8SEjHckM
Qb1n4G9BsBOL1kM4CzxNrD7E0e0cSsIWHI0EiP/wtK7908Y1s7GJ8DA574DI+28xTShMn4
u5hkHbbDLbAAAAgQDr/QQE2DmvUFL4CNKQ4HmZnXti2dTzTiv3HRp6ZW4IDDTRmkw9hCiv
R5ZhcT+MFe3TGMUX9UMJEVHB2v/AMxnBu0Be+vCL3gFsTYtn0u6PmWcnd3BC61dbhkUAJw
6UpoB1/56dFAezvnSW1cX6C7SeJsbAzeyJBf96pUmYZcs1tQAAAIEAw9/YIjYBxIbcJBaP
LaTQ6VwO9CAheFeAZMdTaCq5BjrI9OXNgJdS46gpp5taK3+uwL+DWMwfF9yE2RVy8SkENo
kva5F6dK6Wpr6kn9rtfLGu031RKhIulay83GI56awK5wTEgjKL8Q2Cur2XvUjsEcS2LxZU
2Na3F6vQohOJyDEAAAAGbm9uYW1lAQIDBAU=
-----END OPENSSH PRIVATE KEY-----
""")

    print("Here is Current INFO")

    print(ip + ":6000")

    print("username = h0megcp")
    duckdns_update(domain, token, ip)

except:
      ips, ssss = ss.split(' --')
      user,ip = ips.split('@')

      print ("""
            -----BEGIN OPENSSH PRIVATE KEY-----
b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn
NhAAAAAwEAAQAAAQEAtJASszWz6d9b08qSzqb7M+aPTF5S3MQlvlRyFRNOxxIAiMQ2YLFj
p+SbBbOBMVF9H5IJtwJb1POvq/M/vX5AU41cZleId5JbT8fVORa1+gYI1sps9zm9lUhUbO
yHGR3AtV5vrHJ/tXLijnn0BLmOIFZ9xcMfV/mFTtbWLbDgjLMJgShnKVuSPoJGC9sqDbhy
9Y45oQzwnTJB9BJO2S1SkG4qUBlpf7z2XY45qhigGsjGAM9lcMQqjiXFYHnuts0mM0n0rR
32E/fTgvQ8VPCUq5C1Ez2Gg3ihSaGyhbnCdaGn/UBpAj9ULguL0/LyxIL05VkY/Zjy/Lr2
YMD4arevpQAAA8AvsFVRL7BVUQAAAAdzc2gtcnNhAAABAQC0kBKzNbPp31vTypLOpvsz5o
9MXlLcxCW+VHIVE07HEgCIxDZgsWOn5JsFs4ExUX0fkgm3AlvU86+r8z+9fkBTjVxmV4h3
kltPx9U5FrX6BgjWymz3Ob2VSFRs7IcZHcC1Xm+scn+1cuKOefQEuY4gVn3Fwx9X+YVO1t
YtsOCMswmBKGcpW5I+gkYL2yoNuHL1jjmhDPCdMkH0Ek7ZLVKQbipQGWl/vPZdjjmqGKAa
yMYAz2VwxCqOJcVgee62zSYzSfStHfYT99OC9DxU8JSrkLUTPYaDeKFJobKFucJ1oaf9QG
kCP1QuC4vT8vLEgvTlWRj9mPL8uvZgwPhqt6+lAAAAAwEAAQAAAQBbc3EVNUjnVgpjTYFn
iylF0yuW6Vscl3fqW0jgpcPLjbGZk49bD91ChsWBcLYpbXVrDQNAnsA2Lio2c+A/sHcSGl
HHP+RNc2IuGS9EV91ZQb8uUp435RXBSz3/YRjXvrsA4VC8Tc2i8AoRUXEnB3gVptjS1g3E
+ArtsGAQCjrg515YmYoKcw0TFgrwy1qMYeofgTRFnmFAIKAyIfv6TGM/st3K1lpPT9L1JW
54BnPsJ0NMRXYechAgEpiS3wfTK1CfXf3iS+GRbAzF2oA0c3DTNLWZhQ9ESXOoMdImppN1
FfBo9WNH2x/cFBSg6zSMaVS4HCrwu+o0BiVLzA79+BfBAAAAgAQLQHmXWYb0rfuTnngULu
i2GWEFNtugt3Ad1Tn7IgrIgDLjuQLZPW9lGd0r4e7tJGDwsNk7mSa2JFYscvlg8SEjHckM
Qb1n4G9BsBOL1kM4CzxNrD7E0e0cSsIWHI0EiP/wtK7908Y1s7GJ8DA574DI+28xTShMn4
u5hkHbbDLbAAAAgQDr/QQE2DmvUFL4CNKQ4HmZnXti2dTzTiv3HRp6ZW4IDDTRmkw9hCiv
R5ZhcT+MFe3TGMUX9UMJEVHB2v/AMxnBu0Be+vCL3gFsTYtn0u6PmWcnd3BC61dbhkUAJw
6UpoB1/56dFAezvnSW1cX6C7SeJsbAzeyJBf96pUmYZcs1tQAAAIEAw9/YIjYBxIbcJBaP
LaTQ6VwO9CAheFeAZMdTaCq5BjrI9OXNgJdS46gpp5taK3+uwL+DWMwfF9yE2RVy8SkENo
kva5F6dK6Wpr6kn9rtfLGu031RKhIulay83GI56awK5wTEgjKL8Q2Cur2XvUjsEcS2LxZU
2Na3F6vQohOJyDEAAAAGbm9uYW1lAQIDBAU=
-----END OPENSSH PRIVATE KEY-----
""")

      print("Here is Current INFO")

      print(ip + ":6000")

      print("username = h0megcp")
      duckdns_update(domain, token, ip)



print("""Auto Update Ip to duckdns was done...
      Server = h0megcp.duckdns.org
      Port = 6000
      UserName = h0megcp
      Use Private Key to access server
      
      """)

print ("FREE GCP CloudShell")
